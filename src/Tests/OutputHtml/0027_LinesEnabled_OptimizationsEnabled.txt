
<pre class="background">
<table>
<tbody>
<tr><td class="line_no" line_no="0"></td><td class="code_column"><span class="keyword">using</span> System;</td></tr><tr><td class="line_no" line_no="1"></td><td class="code_column"><span class="keyword">using</span> System.Collections.Concurrent;</td></tr><tr><td class="line_no" line_no="2"></td><td class="code_column"><span class="keyword">using</span> System.Collections.Generic;</td></tr><tr><td class="line_no" line_no="3"></td><td class="code_column"><span class="keyword">using</span> System.Runtime.InteropServices;</td></tr><tr><td class="line_no" line_no="4"></td><td class="code_column"><span class="keyword">using</span> System.Threading;</td></tr><tr><td class="line_no" line_no="5"></td><td></tr><tr><td class="line_no" line_no="6"></td><td class="code_column"><span class="keyword">namespace</span> AsyncWithFibers</td></tr><tr><td class="line_no" line_no="7"></td><td class="code_column">{</td></tr><tr><td class="line_no" line_no="8"></td><td class="code_column">    <span class="keyword">class</span> <span class="class">Program</span></td></tr><tr><td class="line_no" line_no="9"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="10"></td><td class="code_column">        <span class="keyword">static void</span> <span class="method">Main</span>(<span class="keyword">string</span>[] <span class="parameter">args</span>)</td></tr><tr><td class="line_no" line_no="11"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="12"></td><td class="code_column">            <span class="class">HKTMonadFiberAsync</span>.<span class="method">Run</span>();</td></tr><tr><td class="line_no" line_no="13"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="14"></td><td></tr><tr><td class="line_no" line_no="15"></td><td class="code_column">        <span class="keyword">public static void</span> <span class="method">WhereAmI</span>(<span class="keyword">string</span> <span class="parameter">what</span>)</td></tr><tr><td class="line_no" line_no="16"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="17"></td><td class="code_column">            <span class="class">Console</span>.<span class="method">WriteLine</span>(<span class="string">$&quot;Thread</span> {<span class="class">Thread</span>.CurrentThread.ManagedThreadId} <span class="string">Time</span> {<span class="struct">DateTime</span>.Now}<span class="string">:</span> {<span class="parameter">what</span>}<span class="string">&quot;</span>);</td></tr><tr><td class="line_no" line_no="18"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="19"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="20"></td><td></tr><tr><td class="line_no" line_no="21"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">FiberHelper</span></td></tr><tr><td class="line_no" line_no="22"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="23"></td><td class="code_column">        [<span class="class">DllImport</span>(<span class="string">&quot;kernel32.dll&quot;</span>)]</td></tr><tr><td class="line_no" line_no="24"></td><td class="code_column">        <span class="keyword">static extern</span> <span class="struct">IntPtr</span> <span class="method">ConvertThreadToFiber</span>(<span class="struct">IntPtr</span> <span class="parameter">lpParameter</span>);</td></tr><tr><td class="line_no" line_no="25"></td><td></tr><tr><td class="line_no" line_no="26"></td><td class="code_column">        [<span class="class">DllImport</span>(<span class="string">&quot;kernel32.dll&quot;</span>)]</td></tr><tr><td class="line_no" line_no="27"></td><td class="code_column">        <span class="keyword">static extern</span> <span class="struct">IntPtr</span> <span class="method">CreateFiber</span>(<span class="keyword">uint</span> <span class="parameter">dwStackSize</span>, <span class="struct">IntPtr</span> <span class="parameter">lpStartAddress</span>, <span class="struct">IntPtr</span> <span class="parameter">lpParameter</span>);</td></tr><tr><td class="line_no" line_no="28"></td><td></tr><tr><td class="line_no" line_no="29"></td><td class="code_column">        [<span class="class">DllImport</span>(<span class="string">&quot;kernel32.dll&quot;</span>)]</td></tr><tr><td class="line_no" line_no="30"></td><td class="code_column">        <span class="keyword">static extern</span> <span class="struct">IntPtr</span> <span class="method">SwitchToFiber</span>(<span class="struct">IntPtr</span> <span class="parameter">lpStartAddress</span>);</td></tr><tr><td class="line_no" line_no="31"></td><td></tr><tr><td class="line_no" line_no="32"></td><td class="code_column">        [<span class="class">DllImport</span>(<span class="string">&quot;kernel32.dll&quot;</span>)]</td></tr><tr><td class="line_no" line_no="33"></td><td class="code_column">        <span class="keyword">static extern</span> <span class="struct">IntPtr</span> <span class="method">DeleteFiber</span>(<span class="struct">IntPtr</span> <span class="parameter">lpStartAddress</span>);</td></tr><tr><td class="line_no" line_no="34"></td><td></tr><tr><td class="line_no" line_no="35"></td><td class="code_column">        <span class="class">Dictionary</span>&lt;<span class="keyword">int</span>, <span class="struct">IntPtr</span>&gt; actions;</td></tr><tr><td class="line_no" line_no="36"></td><td class="code_column">        <span class="keyword">public</span> <span class="struct">IntPtr</span> fiberCaller;</td></tr><tr><td class="line_no" line_no="37"></td><td></tr><tr><td class="line_no" line_no="38"></td><td class="code_column">        <span class="keyword">public</span> <span class="class">FiberHelper</span>()</td></tr><tr><td class="line_no" line_no="39"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="40"></td><td class="code_column">            actions = <span class="keyword">new</span> <span class="class">Dictionary</span>&lt;<span class="keyword">int</span>, <span class="struct">IntPtr</span>&gt;();</td></tr><tr><td class="line_no" line_no="41"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="42"></td><td></tr><tr><td class="line_no" line_no="43"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Convert</span>()</td></tr><tr><td class="line_no" line_no="44"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="45"></td><td class="code_column">            actions.<span class="method">Add</span>(<span class="numericLiteral">0</span>, <span class="method">ConvertThreadToFiber</span>(<span class="struct">IntPtr</span>.Zero));</td></tr><tr><td class="line_no" line_no="46"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="47"></td><td></tr><tr><td class="line_no" line_no="48"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Create</span>(<span class="keyword">int</span> <span class="parameter">action</span>)</td></tr><tr><td class="line_no" line_no="49"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="50"></td><td class="code_column">            actions.<span class="method">Add</span>(<span class="parameter">action</span>, <span class="method">CreateFiber</span>(<span class="numericLiteral">1024</span> * <span class="numericLiteral">1024</span>, fiberCaller, (<span class="struct">IntPtr</span>)<span class="parameter">action</span>));</td></tr><tr><td class="line_no" line_no="51"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="52"></td><td></tr><tr><td class="line_no" line_no="53"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Switch</span>(<span class="keyword">int</span> <span class="parameter">action</span>)</td></tr><tr><td class="line_no" line_no="54"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="55"></td><td class="code_column">            <span class="class">Thread</span>.<span class="method">Sleep</span>(<span class="numericLiteral">100</span>);</td></tr><tr><td class="line_no" line_no="56"></td><td class="code_column">            <span class="struct">IntPtr</span> <span class="localName">param</span> = actions[<span class="parameter">action</span>];</td></tr><tr><td class="line_no" line_no="57"></td><td class="code_column">            <span class="method">SwitchToFiber</span>(<span class="localName">param</span>);</td></tr><tr><td class="line_no" line_no="58"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="59"></td><td></tr><tr><td class="line_no" line_no="60"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Delete</span>(<span class="keyword">int</span> <span class="parameter">action</span>)</td></tr><tr><td class="line_no" line_no="61"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="62"></td><td class="code_column">            <span class="method">DeleteFiber</span>(actions[<span class="parameter">action</span>]);</td></tr><tr><td class="line_no" line_no="63"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="64"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="65"></td><td></tr><tr><td class="line_no" line_no="66"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">HKTMonadFiberAsync</span></td></tr><tr><td class="line_no" line_no="67"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="68"></td><td class="code_column">        <span class="keyword">public static</span> <span class="class">ConcurrentDictionary</span>&lt;<span class="keyword">int</span>, <span class="keyword">byte</span>&gt; readyToGo = <span class="keyword">new</span> <span class="class">ConcurrentDictionary</span>&lt;<span class="keyword">int</span>, <span class="keyword">byte</span>&gt;();</td></tr><tr><td class="line_no" line_no="69"></td><td class="code_column">        <span class="keyword">public static</span> <span class="class">ConcurrentDictionary</span>&lt;<span class="keyword">int</span>, <span class="delegate">Action</span>&gt; allJobs = <span class="keyword">new</span> <span class="class">ConcurrentDictionary</span>&lt;<span class="keyword">int</span>, <span class="delegate">Action</span>&gt;();</td></tr><tr><td class="line_no" line_no="70"></td><td class="code_column">        <span class="keyword">public static</span> <span class="class">FiberHelper</span> helper = <span class="keyword">new</span> <span class="class">FiberHelper</span>();</td></tr><tr><td class="line_no" line_no="71"></td><td class="code_column">        <span class="keyword">public static int</span> current;</td></tr><tr><td class="line_no" line_no="72"></td><td class="code_column">        <span class="keyword">public static bool</span> done;</td></tr><tr><td class="line_no" line_no="73"></td><td></tr><tr><td class="line_no" line_no="74"></td><td class="code_column">        <span class="keyword">public static int</span> <span class="method">StartFiber</span>(<span class="keyword">int</span> <span class="parameter">actionId</span>)</td></tr><tr><td class="line_no" line_no="75"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="76"></td><td class="code_column">            allJobs[<span class="parameter">actionId</span>]();</td></tr><tr><td class="line_no" line_no="77"></td><td class="code_column">            <span class="control">if</span> (<span class="parameter">actionId</span> != <span class="numericLiteral">0</span>)</td></tr><tr><td class="line_no" line_no="78"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="79"></td><td class="code_column">                <span class="class">HKTMonadFiberAsync</span>.done = <span class="keyword">true</span>;</td></tr><tr><td class="line_no" line_no="80"></td><td class="code_column">                <span class="class">HKTMonadFiberAsync</span>.helper.<span class="method">Switch</span>(<span class="numericLiteral">0</span>);</td></tr><tr><td class="line_no" line_no="81"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="82"></td><td></tr><tr><td class="line_no" line_no="83"></td><td class="code_column">            <span class="control">return</span> <span class="numericLiteral">0</span>;</td></tr><tr><td class="line_no" line_no="84"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="85"></td><td></tr><tr><td class="line_no" line_no="86"></td><td class="code_column">        <span class="keyword">delegate int</span> <span class="delegate">StartFiberDelegate</span>(<span class="keyword">int</span> <span class="parameter">actionId</span>);</td></tr><tr><td class="line_no" line_no="87"></td><td></tr><tr><td class="line_no" line_no="88"></td><td class="code_column">        <span class="keyword">public static void</span> <span class="method">Run</span>()</td></tr><tr><td class="line_no" line_no="89"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="90"></td><td class="code_column">            helper.fiberCaller = <span class="class">Marshal</span>.<span class="method">GetFunctionPointerForDelegate</span>((<span class="delegate">StartFiberDelegate</span>)<span class="method">StartFiber</span>);</td></tr><tr><td class="line_no" line_no="91"></td><td></tr><tr><td class="line_no" line_no="92"></td><td class="code_column">            helper.<span class="method">Convert</span>();</td></tr><tr><td class="line_no" line_no="93"></td><td></tr><tr><td class="line_no" line_no="94"></td><td class="code_column">            allJobs.<span class="method">TryAdd</span>(<span class="numericLiteral">1</span>, <span class="method">RunInternal</span>);</td></tr><tr><td class="line_no" line_no="95"></td><td class="code_column">            readyToGo.<span class="method">TryAdd</span>(<span class="numericLiteral">1</span>, <span class="numericLiteral">0</span>);</td></tr><tr><td class="line_no" line_no="96"></td><td class="code_column">            helper.<span class="method">Create</span>(<span class="numericLiteral">1</span>);</td></tr><tr><td class="line_no" line_no="97"></td><td></tr><tr><td class="line_no" line_no="98"></td><td class="code_column">            allJobs.<span class="method">TryAdd</span>(<span class="numericLiteral">2</span>, <span class="method">SideJob</span>);</td></tr><tr><td class="line_no" line_no="99"></td><td class="code_column">            readyToGo.<span class="method">TryAdd</span>(<span class="numericLiteral">2</span>, <span class="numericLiteral">0</span>);</td></tr><tr><td class="line_no" line_no="100"></td><td class="code_column">            helper.<span class="method">Create</span>(<span class="numericLiteral">2</span>);</td></tr><tr><td class="line_no" line_no="101"></td><td></tr><tr><td class="line_no" line_no="102"></td><td></tr><tr><td class="line_no" line_no="103"></td><td class="code_column">            <span class="control">while</span> (<span class="keyword">true</span>)</td></tr><tr><td class="line_no" line_no="104"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="105"></td><td class="code_column">                done = <span class="keyword">false</span>;</td></tr><tr><td class="line_no" line_no="106"></td><td class="code_column">                <span class="keyword">var</span> <span class="localName">keys</span> = readyToGo.Keys.<span class="method">GetEnumerator</span>();</td></tr><tr><td class="line_no" line_no="107"></td><td class="code_column">                <span class="control">while</span> (<span class="localName">keys</span>.<span class="method">MoveNext</span>())</td></tr><tr><td class="line_no" line_no="108"></td><td class="code_column">                {</td></tr><tr><td class="line_no" line_no="109"></td><td class="code_column">                    current = <span class="localName">keys</span>.Current;</td></tr><tr><td class="line_no" line_no="110"></td><td class="code_column">                    helper.<span class="method">Switch</span>(current);</td></tr><tr><td class="line_no" line_no="111"></td><td class="code_column">                    <span class="control">if</span> (done)</td></tr><tr><td class="line_no" line_no="112"></td><td class="code_column">                    {</td></tr><tr><td class="line_no" line_no="113"></td><td class="code_column">                        helper.<span class="method">Delete</span>(current);</td></tr><tr><td class="line_no" line_no="114"></td><td class="code_column">                        <span class="delegate">Action</span> <span class="localName">action</span>;</td></tr><tr><td class="line_no" line_no="115"></td><td class="code_column">                        allJobs.<span class="method">TryRemove</span>(current, <span class="keyword">out</span> <span class="localName">action</span>);</td></tr><tr><td class="line_no" line_no="116"></td><td class="code_column">                        <span class="keyword">byte</span> <span class="localName">b</span>;</td></tr><tr><td class="line_no" line_no="117"></td><td class="code_column">                        readyToGo.<span class="method">TryRemove</span>(current, <span class="keyword">out</span> <span class="localName">b</span>);</td></tr><tr><td class="line_no" line_no="118"></td><td class="code_column">                    }</td></tr><tr><td class="line_no" line_no="119"></td><td class="code_column">                }</td></tr><tr><td class="line_no" line_no="120"></td><td></tr><tr><td class="line_no" line_no="121"></td><td class="code_column">                <span class="control">if</span> (allJobs.IsEmpty)</td></tr><tr><td class="line_no" line_no="122"></td><td class="code_column">                {</td></tr><tr><td class="line_no" line_no="123"></td><td class="code_column">                    <span class="control">break</span>;</td></tr><tr><td class="line_no" line_no="124"></td><td class="code_column">                }</td></tr><tr><td class="line_no" line_no="125"></td><td></tr><tr><td class="line_no" line_no="126"></td><td class="code_column">                <span class="class">Thread</span>.<span class="method">Sleep</span>(<span class="numericLiteral">1</span>);</td></tr><tr><td class="line_no" line_no="127"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="128"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="129"></td><td></tr><tr><td class="line_no" line_no="130"></td><td class="code_column">        <span class="keyword">private static void</span> <span class="method">RunInternal</span>()</td></tr><tr><td class="line_no" line_no="131"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="132"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">&quot;\tBefore nesting&quot;</span>);</td></tr><tr><td class="line_no" line_no="133"></td><td></tr><tr><td class="line_no" line_no="134"></td><td class="code_column">            <span class="method">RunInternalNested</span>&lt;<span class="class">AsyncBuilder</span>&gt;();</td></tr><tr><td class="line_no" line_no="135"></td><td class="code_column">            <span class="comment">//RunInternalNested&lt;IdBuilder&gt;();</span></td></tr><tr><td class="line_no" line_no="136"></td><td></tr><tr><td class="line_no" line_no="137"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">&quot;\tAfter nesting&quot;</span>);</td></tr><tr><td class="line_no" line_no="138"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="139"></td><td></tr><tr><td class="line_no" line_no="140"></td><td class="code_column">        <span class="keyword">private static void</span> <span class="method">RunInternalNested</span>&lt;<span class="typeParam">T</span>&gt;() <span class="keyword">where</span> <span class="typeParam">T</span> : <span class="class">Builder</span>, <span class="keyword">new</span>()</td></tr><tr><td class="line_no" line_no="141"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="142"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">&quot;\t\tBefore creating delay&quot;</span>);</td></tr><tr><td class="line_no" line_no="143"></td><td></tr><tr><td class="line_no" line_no="144"></td><td class="code_column">            <span class="method">Delay</span>&lt;<span class="typeParam">T</span>&gt;(<span class="numericLiteral">2000</span>);</td></tr><tr><td class="line_no" line_no="145"></td><td></tr><tr><td class="line_no" line_no="146"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">&quot;\t\tAfter sleeping&quot;</span>);</td></tr><tr><td class="line_no" line_no="147"></td><td></tr><tr><td class="line_no" line_no="148"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">data</span> = <span class="method">Data</span>&lt;<span class="typeParam">T</span>, <span class="keyword">string</span>&gt;(<span class="string">&quot;Some string&quot;</span>);</td></tr><tr><td class="line_no" line_no="149"></td><td></tr><tr><td class="line_no" line_no="150"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">$&quot;\t\tAfter creating data</span> {<span class="localName">data</span>}<span class="string">&quot;</span>);</td></tr><tr><td class="line_no" line_no="151"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="152"></td><td></tr><tr><td class="line_no" line_no="153"></td><td class="code_column">        <span class="keyword">private static void</span> <span class="method">Delay</span>&lt;<span class="typeParam">T</span>&gt;(<span class="keyword">int</span> <span class="parameter">timeout</span>) <span class="keyword">where</span> <span class="typeParam">T</span> : <span class="class">Builder</span>, <span class="keyword">new</span>()</td></tr><tr><td class="line_no" line_no="154"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="155"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">context</span> = <span class="keyword">new</span> <span class="typeParam">T</span>().<span class="method">Build</span>&lt;<span class="keyword">object</span>&gt;();</td></tr><tr><td class="line_no" line_no="156"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">timer</span> = <span class="keyword">new</span> <span class="class">Timer</span>(<span class="parameter">_</span> =&gt; <span class="localName">context</span>.<span class="method">Complete</span>(<span class="keyword">new object</span>()), <span class="keyword">null</span>, <span class="parameter">timeout</span>, <span class="class">Timeout</span>.Infinite);</td></tr><tr><td class="line_no" line_no="157"></td><td class="code_column">            <span class="class">GC</span>.<span class="method">KeepAlive</span>(<span class="localName">timer</span>);</td></tr><tr><td class="line_no" line_no="158"></td><td class="code_column">            <span class="localName">context</span>.<span class="method">Map</span>((<span class="keyword">object</span>)<span class="keyword">null</span>, <span class="parameter">_</span> =&gt; <span class="parameter">timeout</span>);</td></tr><tr><td class="line_no" line_no="159"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="160"></td><td></tr><tr><td class="line_no" line_no="161"></td><td class="code_column">        <span class="keyword">private static</span> <span class="typeParam">U</span> <span class="method">Data</span>&lt;<span class="typeParam">T</span>, <span class="typeParam">U</span>&gt;(<span class="typeParam">U</span> <span class="parameter">d</span>) <span class="keyword">where</span> <span class="typeParam">T</span> : <span class="class">Builder</span>, <span class="keyword">new</span>()</td></tr><tr><td class="line_no" line_no="162"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="163"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">context</span> = <span class="keyword">new</span> <span class="typeParam">T</span>().<span class="method">Build</span>&lt;<span class="typeParam">U</span>&gt;();</td></tr><tr><td class="line_no" line_no="164"></td><td class="code_column">            <span class="control">return</span> <span class="localName">context</span>.<span class="method">Map</span>(<span class="parameter">d</span>, <span class="parameter">_</span> =&gt; <span class="parameter">d</span>);</td></tr><tr><td class="line_no" line_no="165"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="166"></td><td></tr><tr><td class="line_no" line_no="167"></td><td class="code_column">        <span class="keyword">private static void</span> <span class="method">SideJob</span>()</td></tr><tr><td class="line_no" line_no="168"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="169"></td><td class="code_column">            <span class="class">Program</span>.<span class="method">WhereAmI</span>(<span class="string">&quot;\tSide job&quot;</span>);</td></tr><tr><td class="line_no" line_no="170"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="171"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="172"></td><td></tr><tr><td class="line_no" line_no="173"></td><td class="code_column">    <span class="keyword">public abstract class</span> <span class="class">Builder</span></td></tr><tr><td class="line_no" line_no="174"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="175"></td><td class="code_column">        <span class="keyword">public abstract</span> <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt; <span class="method">Build</span>&lt;<span class="typeParam">T</span>&gt;();</td></tr><tr><td class="line_no" line_no="176"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="177"></td><td></tr><tr><td class="line_no" line_no="178"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">IdBuilder</span> : <span class="class">Builder</span></td></tr><tr><td class="line_no" line_no="179"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="180"></td><td class="code_column">        <span class="keyword">public override</span> <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt; <span class="method">Build</span>&lt;<span class="typeParam">T</span>&gt;()</td></tr><tr><td class="line_no" line_no="181"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="182"></td><td class="code_column">            <span class="control">return</span> <span class="keyword">new</span> <span class="class">Id</span>&lt;<span class="typeParam">T</span>&gt;();</td></tr><tr><td class="line_no" line_no="183"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="184"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="185"></td><td></tr><tr><td class="line_no" line_no="186"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">AsyncBuilder</span> : <span class="class">Builder</span></td></tr><tr><td class="line_no" line_no="187"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="188"></td><td class="code_column">        <span class="keyword">public override</span> <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt; <span class="method">Build</span>&lt;<span class="typeParam">T</span>&gt;()</td></tr><tr><td class="line_no" line_no="189"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="190"></td><td class="code_column">            <span class="control">return</span> <span class="keyword">new</span> <span class="class">Async</span>&lt;<span class="typeParam">T</span>&gt;();</td></tr><tr><td class="line_no" line_no="191"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="192"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="193"></td><td></tr><tr><td class="line_no" line_no="194"></td><td class="code_column">    <span class="keyword">public interface</span> <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt;</td></tr><tr><td class="line_no" line_no="195"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="196"></td><td class="code_column">        <span class="typeParam">U</span> <span class="method">Map</span>&lt;<span class="typeParam">U</span>&gt;(<span class="typeParam">T</span> <span class="parameter">value</span>, <span class="delegate">Func</span>&lt;<span class="typeParam">T</span>, <span class="typeParam">U</span>&gt; <span class="parameter">lambda</span>);</td></tr><tr><td class="line_no" line_no="197"></td><td class="code_column">        <span class="keyword">void</span> <span class="method">Complete</span>(<span class="typeParam">T</span> <span class="parameter">t</span>);</td></tr><tr><td class="line_no" line_no="198"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="199"></td><td></tr><tr><td class="line_no" line_no="200"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">Id</span>&lt;<span class="typeParam">T</span>&gt; : <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt;</td></tr><tr><td class="line_no" line_no="201"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="202"></td><td class="code_column">        <span class="keyword">private</span> <span class="typeParam">T</span> t;</td></tr><tr><td class="line_no" line_no="203"></td><td></tr><tr><td class="line_no" line_no="204"></td><td class="code_column">        <span class="keyword">public</span> <span class="typeParam">U</span> <span class="method">Map</span>&lt;<span class="typeParam">U</span>&gt;(<span class="typeParam">T</span> <span class="parameter">value</span>, <span class="delegate">Func</span>&lt;<span class="typeParam">T</span>, <span class="typeParam">U</span>&gt; <span class="parameter">lambda</span>)</td></tr><tr><td class="line_no" line_no="205"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="206"></td><td class="code_column">            <span class="keyword">this</span>.t = <span class="parameter">value</span>;</td></tr><tr><td class="line_no" line_no="207"></td><td class="code_column">            <span class="keyword">lock</span> (<span class="keyword">this</span>)</td></tr><tr><td class="line_no" line_no="208"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="209"></td><td class="code_column">                <span class="control">while</span> (t == <span class="keyword">null</span>)</td></tr><tr><td class="line_no" line_no="210"></td><td class="code_column">                {</td></tr><tr><td class="line_no" line_no="211"></td><td class="code_column">                    <span class="class">Monitor</span>.<span class="method">Wait</span>(<span class="keyword">this</span>);</td></tr><tr><td class="line_no" line_no="212"></td><td class="code_column">                }</td></tr><tr><td class="line_no" line_no="213"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="214"></td><td></tr><tr><td class="line_no" line_no="215"></td><td class="code_column">            <span class="control">return</span> <span class="parameter">lambda</span>(<span class="keyword">this</span>.t);</td></tr><tr><td class="line_no" line_no="216"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="217"></td><td></tr><tr><td class="line_no" line_no="218"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Complete</span>(<span class="typeParam">T</span> <span class="parameter">t</span>)</td></tr><tr><td class="line_no" line_no="219"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="220"></td><td class="code_column">            <span class="keyword">lock</span> (<span class="keyword">this</span>)</td></tr><tr><td class="line_no" line_no="221"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="222"></td><td class="code_column">                <span class="keyword">this</span>.t = <span class="parameter">t</span>;</td></tr><tr><td class="line_no" line_no="223"></td><td class="code_column">                <span class="class">Monitor</span>.<span class="method">PulseAll</span>(<span class="keyword">this</span>);</td></tr><tr><td class="line_no" line_no="224"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="225"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="226"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="227"></td><td></tr><tr><td class="line_no" line_no="228"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">Async</span>&lt;<span class="typeParam">T</span>&gt; : <span class="interface">Monad</span>&lt;<span class="typeParam">T</span>&gt;</td></tr><tr><td class="line_no" line_no="229"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="230"></td><td class="code_column">        <span class="keyword">private</span> <span class="typeParam">T</span> t;</td></tr><tr><td class="line_no" line_no="231"></td><td class="code_column">        <span class="keyword">private int</span> current;</td></tr><tr><td class="line_no" line_no="232"></td><td></tr><tr><td class="line_no" line_no="233"></td><td class="code_column">        <span class="keyword">public</span> <span class="typeParam">U</span> <span class="method">Map</span>&lt;<span class="typeParam">U</span>&gt;(<span class="typeParam">T</span> <span class="parameter">value</span>, <span class="delegate">Func</span>&lt;<span class="typeParam">T</span>, <span class="typeParam">U</span>&gt; <span class="parameter">lambda</span>)</td></tr><tr><td class="line_no" line_no="234"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="235"></td><td class="code_column">            <span class="keyword">this</span>.t = <span class="parameter">value</span>;</td></tr><tr><td class="line_no" line_no="236"></td><td class="code_column">            <span class="control">if</span> (t == <span class="keyword">null</span>)</td></tr><tr><td class="line_no" line_no="237"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="238"></td><td class="code_column">                <span class="keyword">this</span>.current = <span class="class">HKTMonadFiberAsync</span>.current;</td></tr><tr><td class="line_no" line_no="239"></td><td class="code_column">                <span class="keyword">byte</span> <span class="localName">b</span>;</td></tr><tr><td class="line_no" line_no="240"></td><td class="code_column">                <span class="class">HKTMonadFiberAsync</span>.readyToGo.<span class="method">TryRemove</span>(<span class="keyword">this</span>.current, <span class="keyword">out</span> <span class="localName">b</span>);</td></tr><tr><td class="line_no" line_no="241"></td><td class="code_column">                <span class="class">HKTMonadFiberAsync</span>.helper.<span class="method">Switch</span>(<span class="numericLiteral">0</span>);</td></tr><tr><td class="line_no" line_no="242"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="243"></td><td></tr><tr><td class="line_no" line_no="244"></td><td class="code_column">            <span class="control">return</span> <span class="parameter">lambda</span>(<span class="keyword">this</span>.t);</td></tr><tr><td class="line_no" line_no="245"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="246"></td><td></tr><tr><td class="line_no" line_no="247"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Complete</span>(<span class="typeParam">T</span> <span class="parameter">t</span>)</td></tr><tr><td class="line_no" line_no="248"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="249"></td><td class="code_column">            <span class="keyword">this</span>.t = <span class="parameter">t</span>;</td></tr><tr><td class="line_no" line_no="250"></td><td class="code_column">            <span class="class">HKTMonadFiberAsync</span>.readyToGo.<span class="method">TryAdd</span>(<span class="keyword">this</span>.current, <span class="numericLiteral">0</span>);</td></tr><tr><td class="line_no" line_no="251"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="252"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="253"></td><td class="code_column">}</td></tr></tbody>
</table></pre>
