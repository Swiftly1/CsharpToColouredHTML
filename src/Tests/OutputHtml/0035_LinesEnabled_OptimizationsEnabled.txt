
<pre class="background">
<table>
<tbody>
<tr><td class="line_no" line_no="0"></td><td class="code_column"><span class="keyword">using</span> TestQ;</td></tr><tr><td class="line_no" line_no="1"></td><td class="code_column"><span class="keyword">using</span> Test2.Test;</td></tr><tr><td class="line_no" line_no="2"></td><td></tr><tr><td class="line_no" line_no="3"></td><td class="code_column"><span class="keyword">namespace</span> Rere</td></tr><tr><td class="line_no" line_no="4"></td><td class="code_column">{</td></tr><tr><td class="line_no" line_no="5"></td><td class="code_column">    <span class="keyword">public class</span> <span class="class">S</span></td></tr><tr><td class="line_no" line_no="6"></td><td class="code_column">    {</td></tr><tr><td class="line_no" line_no="7"></td><td class="code_column">        <span class="keyword">public static</span> TestQ.<span class="class">Home</span> home;</td></tr><tr><td class="line_no" line_no="8"></td><td></tr><tr><td class="line_no" line_no="9"></td><td class="code_column">        <span class="keyword">public void</span> <span class="method">Test</span>()</td></tr><tr><td class="line_no" line_no="10"></td><td class="code_column">        {</td></tr><tr><td class="line_no" line_no="11"></td><td class="code_column">            TestQ.<span class="class">SuperHome</span> <span class="localName">h</span> = <span class="keyword">new</span>();</td></tr><tr><td class="line_no" line_no="12"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">q</span> = (TestQ.<span class="class">Home</span>)<span class="localName">h</span>;</td></tr><tr><td class="line_no" line_no="13"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">s</span> = <span class="keyword">new</span> TestQ.<span class="class">Asd</span>();</td></tr><tr><td class="line_no" line_no="14"></td><td></tr><tr><td class="line_no" line_no="15"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">found</span> = <span class="method">FindNode</span>(current, item);</td></tr><tr><td class="line_no" line_no="16"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">value</span> = <span class="localName">found</span>.StoredValue.Value;</td></tr><tr><td class="line_no" line_no="17"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">data</span> = <span class="keyword">new</span> [] { <span class="numericLiteral">1</span>, <span class="numericLiteral">2</span>, <span class="numericLiteral">3</span> };</td></tr><tr><td class="line_no" line_no="18"></td><td></tr><tr><td class="line_no" line_no="19"></td><td class="code_column">            <span class="control">throw</span> <span class="keyword">new</span> <span class="class">ArgumentException</span>(<span class="string">$&quot;Value: &#39;</span>{<span class="localName">value</span>}<span class="string">&#39; cannot be saved because there&#39;s already value:&quot;</span> +</td></tr><tr><td class="line_no" line_no="20"></td><td class="code_column">                                    <span class="string">$&quot;</span> {<span class="localName">found</span>.StoredValue.Value}<span class="string">. Key:</span> {<span class="keyword">string</span>.<span class="method">Join</span>(<span class="string">&quot;,&quot;</span>, <span class="localName">data</span>)}<span class="string">&quot;</span>);</td></tr><tr><td class="line_no" line_no="21"></td><td></tr><tr><td class="line_no" line_no="22"></td><td class="code_column">            <span class="keyword">new</span> <span class="class">Aasdasd</span>(<span class="string">$&quot;abc</span> {<span class="localName">found</span>.A.B}<span class="string">&quot;</span>);</td></tr><tr><td class="line_no" line_no="23"></td><td></tr><tr><td class="line_no" line_no="24"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">test</span> = <span class="method">DoStuff</span>();</td></tr><tr><td class="line_no" line_no="25"></td><td class="code_column">            <span class="keyword">var</span> <span class="localName">test2</span> = <span class="localName">test</span>.Items.<span class="method">Item</span>(<span class="numericLiteral">0</span>).Value.<span class="method">ToString</span>();</td></tr><tr><td class="line_no" line_no="26"></td><td></tr><tr><td class="line_no" line_no="27"></td><td class="code_column">            <span class="control">if</span> (<span class="localName">data</span>.<span class="method">GetType</span>() == <span class="keyword">typeof</span>(TestQ.<span class="class">Cat</span>))</td></tr><tr><td class="line_no" line_no="28"></td><td class="code_column">            {</td></tr><tr><td class="line_no" line_no="29"></td><td class="code_column">                <span class="class">Console</span>.<span class="method">WriteLine</span>(<span class="numericLiteral">7</span>);</td></tr><tr><td class="line_no" line_no="30"></td><td class="code_column">            }</td></tr><tr><td class="line_no" line_no="31"></td><td></tr><tr><td class="line_no" line_no="32"></td><td class="code_column">            TestQ.<span class="class">Cat</span>.StaticProperty.<span class="method">MethodCall</span>(<span class="string">&quot;something&quot;</span>);</td></tr><tr><td class="line_no" line_no="33"></td><td class="code_column">        }</td></tr><tr><td class="line_no" line_no="34"></td><td class="code_column">    }</td></tr><tr><td class="line_no" line_no="35"></td><td class="code_column">}</td></tr></tbody>
</table></pre>
